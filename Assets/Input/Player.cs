//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Player: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Player()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player"",
    ""maps"": [
        {
            ""name"": ""CardPlay"",
            ""id"": ""1bc3b65c-e613-4846-9a3d-9d2490f93658"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""65ab36b0-9a7d-4a4a-9c51-9a136db49f87"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayCard"",
                    ""type"": ""Button"",
                    ""id"": ""ebae5d4a-84ad-4802-9732-45b04d7e4afa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DragCard"",
                    ""type"": ""Value"",
                    ""id"": ""961b4d18-de74-4ef0-94d3-1fef155ae48c"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""88745976-1365-44fe-a5de-9a3bf420c940"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ReleaseCard"",
                    ""type"": ""Value"",
                    ""id"": ""0869844d-d731-4797-9878-55e5eead1ebd"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScreenPos"",
                    ""type"": ""Value"",
                    ""id"": ""35a69bb4-2c68-45c1-aa99-6328f9a62198"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Gyro"",
                    ""type"": ""Button"",
                    ""id"": ""94f75dad-c314-4848-8873-9f1b4b71d229"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7c26860e-890b-4455-a8b0-718f2806d497"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17ee2078-c980-4a6e-9279-cec2cf9aaa84"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f381ab89-0a10-4349-a1aa-2b65d178da0b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c90b6a89-8e8d-4dac-bfeb-9c6defde972b"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayCard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d4c4cc2-675c-43ed-8d11-1655ed2bf949"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DragCard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD Keys"",
                    ""id"": ""69ae8700-adbc-49d0-8b59-cabe6ab0977f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ff6027c4-2061-4fdb-b24f-b254ba6f9b7c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e51fb3e5-c0a8-4239-b17b-7b7088d62181"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8555362c-f54b-4534-91e1-60ae91425ea0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f740c23c-0514-4352-8e18-385cee8f7842"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cd17f53f-d37b-4734-93bd-096f71bf6720"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReleaseCard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1d51925-d19f-4ca1-b5fb-73fe13ff3ee4"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScreenPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca66c589-7009-48c5-98a0-1059e43fb49f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gyro"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""id"": ""30141619-41ed-44cc-92bf-6d2a6017f598"",
            ""actions"": [
                {
                    ""name"": ""TouchPosition"",
                    ""type"": ""Value"",
                    ""id"": ""74a20ba3-a6e6-4952-ac20-ef8829d4c9b8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchPress"",
                    ""type"": ""Button"",
                    ""id"": ""6636204d-3ef4-409c-943f-0fb9140daa66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchPress2"",
                    ""type"": ""Value"",
                    ""id"": ""ccad882f-83a9-44f6-a91c-e3db608a3ea0"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Swipe"",
                    ""type"": ""Value"",
                    ""id"": ""153cafd8-2ef2-41c6-a45d-3ffa7d9b7008"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""90f7fe84-3dca-44bf-a9e7-4d0a680742f2"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6281002f-cb80-403b-9fe7-6009435e222b"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf66c291-51a0-4582-97a2-56f8b1d1d724"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPress2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f97b72bb-5228-444a-8d71-f704e6fec273"",
                    ""path"": ""<Touchscreen>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CardPlay
        m_CardPlay = asset.FindActionMap("CardPlay", throwIfNotFound: true);
        m_CardPlay_Jump = m_CardPlay.FindAction("Jump", throwIfNotFound: true);
        m_CardPlay_PlayCard = m_CardPlay.FindAction("PlayCard", throwIfNotFound: true);
        m_CardPlay_DragCard = m_CardPlay.FindAction("DragCard", throwIfNotFound: true);
        m_CardPlay_Move = m_CardPlay.FindAction("Move", throwIfNotFound: true);
        m_CardPlay_ReleaseCard = m_CardPlay.FindAction("ReleaseCard", throwIfNotFound: true);
        m_CardPlay_ScreenPos = m_CardPlay.FindAction("ScreenPos", throwIfNotFound: true);
        m_CardPlay_Gyro = m_CardPlay.FindAction("Gyro", throwIfNotFound: true);
        // Touch
        m_Touch = asset.FindActionMap("Touch", throwIfNotFound: true);
        m_Touch_TouchPosition = m_Touch.FindAction("TouchPosition", throwIfNotFound: true);
        m_Touch_TouchPress = m_Touch.FindAction("TouchPress", throwIfNotFound: true);
        m_Touch_TouchPress2 = m_Touch.FindAction("TouchPress2", throwIfNotFound: true);
        m_Touch_Swipe = m_Touch.FindAction("Swipe", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CardPlay
    private readonly InputActionMap m_CardPlay;
    private List<ICardPlayActions> m_CardPlayActionsCallbackInterfaces = new List<ICardPlayActions>();
    private readonly InputAction m_CardPlay_Jump;
    private readonly InputAction m_CardPlay_PlayCard;
    private readonly InputAction m_CardPlay_DragCard;
    private readonly InputAction m_CardPlay_Move;
    private readonly InputAction m_CardPlay_ReleaseCard;
    private readonly InputAction m_CardPlay_ScreenPos;
    private readonly InputAction m_CardPlay_Gyro;
    public struct CardPlayActions
    {
        private @Player m_Wrapper;
        public CardPlayActions(@Player wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_CardPlay_Jump;
        public InputAction @PlayCard => m_Wrapper.m_CardPlay_PlayCard;
        public InputAction @DragCard => m_Wrapper.m_CardPlay_DragCard;
        public InputAction @Move => m_Wrapper.m_CardPlay_Move;
        public InputAction @ReleaseCard => m_Wrapper.m_CardPlay_ReleaseCard;
        public InputAction @ScreenPos => m_Wrapper.m_CardPlay_ScreenPos;
        public InputAction @Gyro => m_Wrapper.m_CardPlay_Gyro;
        public InputActionMap Get() { return m_Wrapper.m_CardPlay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CardPlayActions set) { return set.Get(); }
        public void AddCallbacks(ICardPlayActions instance)
        {
            if (instance == null || m_Wrapper.m_CardPlayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CardPlayActionsCallbackInterfaces.Add(instance);
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @PlayCard.started += instance.OnPlayCard;
            @PlayCard.performed += instance.OnPlayCard;
            @PlayCard.canceled += instance.OnPlayCard;
            @DragCard.started += instance.OnDragCard;
            @DragCard.performed += instance.OnDragCard;
            @DragCard.canceled += instance.OnDragCard;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @ReleaseCard.started += instance.OnReleaseCard;
            @ReleaseCard.performed += instance.OnReleaseCard;
            @ReleaseCard.canceled += instance.OnReleaseCard;
            @ScreenPos.started += instance.OnScreenPos;
            @ScreenPos.performed += instance.OnScreenPos;
            @ScreenPos.canceled += instance.OnScreenPos;
            @Gyro.started += instance.OnGyro;
            @Gyro.performed += instance.OnGyro;
            @Gyro.canceled += instance.OnGyro;
        }

        private void UnregisterCallbacks(ICardPlayActions instance)
        {
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @PlayCard.started -= instance.OnPlayCard;
            @PlayCard.performed -= instance.OnPlayCard;
            @PlayCard.canceled -= instance.OnPlayCard;
            @DragCard.started -= instance.OnDragCard;
            @DragCard.performed -= instance.OnDragCard;
            @DragCard.canceled -= instance.OnDragCard;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @ReleaseCard.started -= instance.OnReleaseCard;
            @ReleaseCard.performed -= instance.OnReleaseCard;
            @ReleaseCard.canceled -= instance.OnReleaseCard;
            @ScreenPos.started -= instance.OnScreenPos;
            @ScreenPos.performed -= instance.OnScreenPos;
            @ScreenPos.canceled -= instance.OnScreenPos;
            @Gyro.started -= instance.OnGyro;
            @Gyro.performed -= instance.OnGyro;
            @Gyro.canceled -= instance.OnGyro;
        }

        public void RemoveCallbacks(ICardPlayActions instance)
        {
            if (m_Wrapper.m_CardPlayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICardPlayActions instance)
        {
            foreach (var item in m_Wrapper.m_CardPlayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CardPlayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CardPlayActions @CardPlay => new CardPlayActions(this);

    // Touch
    private readonly InputActionMap m_Touch;
    private List<ITouchActions> m_TouchActionsCallbackInterfaces = new List<ITouchActions>();
    private readonly InputAction m_Touch_TouchPosition;
    private readonly InputAction m_Touch_TouchPress;
    private readonly InputAction m_Touch_TouchPress2;
    private readonly InputAction m_Touch_Swipe;
    public struct TouchActions
    {
        private @Player m_Wrapper;
        public TouchActions(@Player wrapper) { m_Wrapper = wrapper; }
        public InputAction @TouchPosition => m_Wrapper.m_Touch_TouchPosition;
        public InputAction @TouchPress => m_Wrapper.m_Touch_TouchPress;
        public InputAction @TouchPress2 => m_Wrapper.m_Touch_TouchPress2;
        public InputAction @Swipe => m_Wrapper.m_Touch_Swipe;
        public InputActionMap Get() { return m_Wrapper.m_Touch; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TouchActions set) { return set.Get(); }
        public void AddCallbacks(ITouchActions instance)
        {
            if (instance == null || m_Wrapper.m_TouchActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TouchActionsCallbackInterfaces.Add(instance);
            @TouchPosition.started += instance.OnTouchPosition;
            @TouchPosition.performed += instance.OnTouchPosition;
            @TouchPosition.canceled += instance.OnTouchPosition;
            @TouchPress.started += instance.OnTouchPress;
            @TouchPress.performed += instance.OnTouchPress;
            @TouchPress.canceled += instance.OnTouchPress;
            @TouchPress2.started += instance.OnTouchPress2;
            @TouchPress2.performed += instance.OnTouchPress2;
            @TouchPress2.canceled += instance.OnTouchPress2;
            @Swipe.started += instance.OnSwipe;
            @Swipe.performed += instance.OnSwipe;
            @Swipe.canceled += instance.OnSwipe;
        }

        private void UnregisterCallbacks(ITouchActions instance)
        {
            @TouchPosition.started -= instance.OnTouchPosition;
            @TouchPosition.performed -= instance.OnTouchPosition;
            @TouchPosition.canceled -= instance.OnTouchPosition;
            @TouchPress.started -= instance.OnTouchPress;
            @TouchPress.performed -= instance.OnTouchPress;
            @TouchPress.canceled -= instance.OnTouchPress;
            @TouchPress2.started -= instance.OnTouchPress2;
            @TouchPress2.performed -= instance.OnTouchPress2;
            @TouchPress2.canceled -= instance.OnTouchPress2;
            @Swipe.started -= instance.OnSwipe;
            @Swipe.performed -= instance.OnSwipe;
            @Swipe.canceled -= instance.OnSwipe;
        }

        public void RemoveCallbacks(ITouchActions instance)
        {
            if (m_Wrapper.m_TouchActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITouchActions instance)
        {
            foreach (var item in m_Wrapper.m_TouchActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TouchActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TouchActions @Touch => new TouchActions(this);
    public interface ICardPlayActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnPlayCard(InputAction.CallbackContext context);
        void OnDragCard(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnReleaseCard(InputAction.CallbackContext context);
        void OnScreenPos(InputAction.CallbackContext context);
        void OnGyro(InputAction.CallbackContext context);
    }
    public interface ITouchActions
    {
        void OnTouchPosition(InputAction.CallbackContext context);
        void OnTouchPress(InputAction.CallbackContext context);
        void OnTouchPress2(InputAction.CallbackContext context);
        void OnSwipe(InputAction.CallbackContext context);
    }
}
